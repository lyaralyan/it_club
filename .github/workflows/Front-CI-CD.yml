name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'README.rst'

env:
  IMAGE_FRONT: lyaralyan/itclub
  IMAGE_FRONT_TAG: ${{ github.sha }}   # уникальный тег по коммиту

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.IMAGE_FRONT }}:${{ env.IMAGE_FRONT_TAG }}

  CD:
    runs-on: ubuntu-latest
    needs: CI
    env:
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      IMAGE_FRONT: ${{ env.IMAGE_FRONT }}
      IMAGE_FRONT_TAG: ${{ env.IMAGE_FRONT_TAG }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

      - name: Deploy to production
        run: |
          echo "Deploying $IMAGE_FRONT:$IMAGE_FRONT_TAG to $SERVER_USER@$SERVER_HOST"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "\
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD && \
            docker pull $IMAGE_FRONT:$IMAGE_FRONT_TAG && \
            /home/it-adm/club-dev/docker-confs/image.sh \
          "
